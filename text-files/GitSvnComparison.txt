GitSvnComparison

GitSvnComparison



Note: This page is currently a work in progress. It started out as a private email to someone who currently uses Subversion. 
I decided to make it available and try to extend it further. I'll remove this comment when the page is improved.  :) -- Shawn Pearce

See the discussion page for further comments

Although this page is hosted on a Git-specific Wiki it tries to provide a fair and unbiased comparison of Git and Subversion 
to help prospective users of both tools better evaluate their choices. This page only describes base Subversion and does not 
discuss the benefits and drawbacks to using SVK, a distributed wrapper around Subversion. It also does not discuss using 
Git as subversion client.


A summary of differences

Git is much faster than Subversion

Subversion allows you to check out just a subtree of a repository; Git requires you to clone the entire repository (including history) 
and create a working copy that mirrors at least a subset of the items under version control.

Git's repositories are much smaller than Subversions (for the Mozilla project, 30x smaller)

Git was designed to be fully distributed from the start, allowing each developer to have full local control

Git branches are simpler and less resource heavy than Subversion's

Git branches carry their entire history

Merging in Git does not require you to remember the revision you merged from (this benefit was obviated with the release of Subversion 1.5)

Git provides better auditing of branch and merge events

Git's repo file formats are simple, so repair is easy and corruption is rare.

Backing up Subversion repositories centrally is potentially simpler - since you can choose to distributed folders within a repo in git

Git repository clones act as full repository backups

Subversion's UI is more mature than Git's

Walking through versions is simpler in Subversion because it uses sequential revision numbers (1,2,3,..); 
Git uses unpredictable SHA-1 hashes. Walking backwards in Git is easy using the "^" syntax, but there is no easy way to walk forward.


