Maven defines 4 steps of a build process

Lifecycle
Build Phase
Plugin
Goals: The task (action) that executes.

The definitions are detailed at Maven Site, but I have tried to summarize:

Maven defines 4 "steps" of a Build Process:

Life Cycle:     3 Life Cycles (aka Build Lifecycles) - Default, Clean, Site. References
Build Phase:  Each Life Cycle is made up of Phases - e.g. For default lifecycle: compile, test, package, install, etc
Plugin:           Artifact that provide one or more goals. Based on packaging(jar,war,etc), a plugin:goal is bind to a phase. Details
Goals:           The task (action) that executes. A plugin can have one or more goals. When configuring a plugin in a POM, goal needs to be specified. Additionally, in case a plugin definition does not have a default build phase, the phase can be specified/bind with the plugin goal.





A Build Lifecycle is Made Up of Phases

Each of these build lifecycles is defined by a different list of build phases, wherein a build phase represents a stage in the lifecycle.

For example, the default lifecycle comprises of the following phases (for a complete list of the lifecycle phases, refer to the Lifecycle Reference):

validate - validate the project is correct and all necessary information is available
compile - compile the source code of the project
test - test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
package - take the compiled code and package it in its distributable format, such as a JAR.
verify - run any checks on results of integration tests to ensure quality criteria are met
install - install the package into the local repository, for use as a dependency in other projects locally
deploy - done in the build environment, copies the final package to the remote repository for sharing with other developers and projects.
These lifecycle phases (plus the other lifecycle phases not shown here) are executed sequentially to complete the default lifecycle.


